---
layout: default
title: Boho Wedding Dress Elegant
description: Ethereal and free-spirited boho wedding dress with delicate lace details and flowing silhouette. Perfect for outdoor weddings.
---

<div class="product-page">
  <div class="gallery">
    <div class="gallery-image-container">
      <img src="{{ site.baseurl }}/assets/images/boho-wedding-dress-elegant/main.webp" 
           alt="Boho Wedding Dress Elegant - Main View"
           class="gallery-image active"
           loading="lazy">
      
      <img src="{{ site.baseurl }}/assets/images/boho-wedding-dress-elegant/picture1.webp" 
           alt="Boho Wedding Dress Elegant - Additional View 1"
           class="gallery-image"
           loading="lazy">
      
      <img src="{{ site.baseurl }}/assets/images/boho-wedding-dress-elegant/picture2.webp" 
           alt="Boho Wedding Dress Elegant - Additional View 2"
           class="gallery-image"
           loading="lazy">
      
      <img src="{{ site.baseurl }}/assets/images/boho-wedding-dress-elegant/detail.webp" 
           alt="Boho Wedding Dress Elegant - Detail View"
           class="gallery-image"
           loading="lazy">
    </div>
  </div>

  <section class="product-details">
    <h1>Boho Wedding Dress Elegant</h1>
    <ul>
      <li>Ethereal Free-Spirited Design</li>
      <li>Delicate Lace Details</li>
      <li>Flowing Silhouette</li>
      <li>Perfect for Outdoor Weddings</li>
      <li>Comfortable & Lightweight Fabric</li>
    </ul>
    <p>This ethereal boho wedding dress embodies free-spirited elegance with its delicate lace details and flowing silhouette. Perfect for the bride seeking a romantic, relaxed look for garden ceremonies, beach celebrations, or rustic countryside weddings. The lightweight design ensures comfort throughout your special day while creating a dreamy, effortless appearance.</p>
    
    <a href="#" class="customize-button">Customize for You</a>
  </section>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Image gallery carousel functionality
    const gallery = document.querySelector('.gallery');
    if (gallery) {
      const images = gallery.querySelectorAll('.gallery-image');
      let currentIndex = 0;
      let autoRotateInterval;
      
      // Create gallery controls
      const controls = document.createElement('div');
      controls.className = 'gallery-controls';
      gallery.appendChild(controls);
      
      // Create navigation dots
      const dotsContainer = document.createElement('div');
      dotsContainer.className = 'gallery-nav';
      
      // Create previous arrow
      const prevArrow = document.createElement('div');
      prevArrow.className = 'gallery-arrow gallery-prev';
      prevArrow.innerHTML = '❮';
      controls.appendChild(prevArrow);
      
      // Create next arrow
      const nextArrow = document.createElement('div');
      nextArrow.className = 'gallery-arrow gallery-next';
      nextArrow.innerHTML = '❯';
      controls.appendChild(nextArrow);
      
      // Create dots
      images.forEach((_, index) => {
        const dot = document.createElement('div');
        dot.className = 'gallery-dot';
        if (index === 0) dot.classList.add('active');
        
        dot.addEventListener('click', () => {
          currentIndex = index;
          updateGallery();
        });
        
        dotsContainer.appendChild(dot);
      });
      
      controls.appendChild(dotsContainer);
      
      // Update gallery function
      function updateGallery() {
        images.forEach(img => img.classList.remove('active'));
        document.querySelectorAll('.gallery-dot').forEach(dot => dot.classList.remove('active'));
        
        images[currentIndex].classList.add('active');
        document.querySelectorAll('.gallery-dot')[currentIndex].classList.add('active');
      }
      
      // Next/Previous functions
      function nextImage() {
        currentIndex = (currentIndex + 1) % images.length;
        updateGallery();
      }
      
      function prevImage() {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        updateGallery();
      }
      
      // Event listeners
      prevArrow.addEventListener('click', prevImage);
      nextArrow.addEventListener('click', nextImage);
      
      // Auto-rotate
      function startAutoRotate() {
        autoRotateInterval = setInterval(nextImage, 5000);
      }
      
      function stopAutoRotate() {
        clearInterval(autoRotateInterval);
      }
      
      startAutoRotate();
      gallery.addEventListener('mouseenter', stopAutoRotate);
      gallery.addEventListener('mouseleave', startAutoRotate);
    }
  });
</script>
